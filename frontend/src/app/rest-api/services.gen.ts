// This file is auto-generated by @hey-api/openapi-ts

import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import type { Observable } from 'rxjs';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { PostAuthSigninData, PostAuthSigninResponse, PostAuthSignupData, PostAuthSignupResponse, PostAuthChangePasswordData, PostAuthChangePasswordResponse, GetApiHealthcheckResponse, GetApiUsersResponse, GetApiProductsResponse } from './types.gen';

@Injectable({
    providedIn: 'root'
})
export class AuthenticationService {
    constructor(public readonly http: HttpClient) { }
    
    /**
     * Sign in a user
     * @param data The data for the request.
     * @param data.requestBody
     * @returns SigninRequest Successful login
     * @throws ApiError
     */
    public postAuthSignin(data: PostAuthSigninData): Observable<PostAuthSigninResponse> {
        return __request(OpenAPI, this.http, {
            method: 'POST',
            url: '/auth/signin',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                401: 'Unauthorized'
            }
        });
    }
    
    /**
     * Register a new user
     * @param data The data for the request.
     * @param data.requestBody
     * @returns SignupResponse User created
     * @throws ApiError
     */
    public postAuthSignup(data: PostAuthSignupData): Observable<PostAuthSignupResponse> {
        return __request(OpenAPI, this.http, {
            method: 'POST',
            url: '/auth/signup',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Invalid input'
            }
        });
    }
    
    /**
     * Change user password
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ChangePasswordResponse Password change successful
     * @throws ApiError
     */
    public postAuthChangePassword(data: PostAuthChangePasswordData): Observable<PostAuthChangePasswordResponse> {
        return __request(OpenAPI, this.http, {
            method: 'POST',
            url: '/auth/change-password',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'Invalid input or password'
            }
        });
    }
    
}

@Injectable({
    providedIn: 'root'
})
export class HealthcheckService {
    constructor(public readonly http: HttpClient) { }
    
    /**
     * Health Check
     * Responds if the app is up and running
     * @returns unknown App is up and running
     * @throws ApiError
     */
    public getApiHealthcheck(): Observable<GetApiHealthcheckResponse> {
        return __request(OpenAPI, this.http, {
            method: 'GET',
            url: '/api/healthcheck'
        });
    }
    
}

@Injectable({
    providedIn: 'root'
})
export class UsersService {
    constructor(public readonly http: HttpClient) { }
    
    /**
     * Get a list of users
     * @returns UserResponse A list of users
     * @throws ApiError
     */
    public getApiUsers(): Observable<GetApiUsersResponse> {
        return __request(OpenAPI, this.http, {
            method: 'GET',
            url: '/api/users'
        });
    }
    
}

@Injectable({
    providedIn: 'root'
})
export class ProductsService {
    constructor(public readonly http: HttpClient) { }
    
    /**
     * Get a list of products
     * @returns ProductResponse A list of products
     * @throws ApiError
     */
    public getApiProducts(): Observable<GetApiProductsResponse> {
        return __request(OpenAPI, this.http, {
            method: 'GET',
            url: '/api/products'
        });
    }
    
}